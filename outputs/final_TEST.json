[
    {
        "filePath": "package.json",
        "data": "{\n  \"name\": \"my-app\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\"\n  },\n  \"dependencies\": {\n    \"@headlessui/react\": \"^1.7.17\",\n    \"@headlessui/tailwindcss\": \"^0.2.0\",\n    \"@leafac/rehype-shiki\": \"^2.2.1\",\n    \"@mdx-js/loader\": \"^3.0.0\",\n    \"@next/mdx\": \"^14.0.4\",\n    \"@tailwindcss/forms\": \"^0.5.7\",\n    \"@vercel/analytics\": \"^1.1.1\",\n    \"acorn\": \"^8.11.2\",\n    \"acorn-jsx\": \"^5.3.2\",\n    \"clsx\": \"^2.0.0\",\n    \"escape-string-regexp\": \"^5.0.0\",\n    \"framer-motion\": \"^10.16.16\",\n    \"next\": \"14.0.4\",\n    \"nodemailer\": \"^6.9.13\",\n    \"path\": \"^0.12.7\",\n    \"react\": \"^18\",\n    \"react-dom\": \"^18\",\n    \"recma-import-images\": \"^0.0.3\",\n    \"remark-gfm\": \"^4.0.0\",\n    \"remark-rehype-wrap\": \"^0.0.3\",\n    \"remark-unwrap-images\": \"^4.0.0\",\n    \"shiki\": \"^0.14.6\",\n    \"unified-conditional\": \"^0.0.2\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^18\",\n    \"@types/react-dom\": \"^18\",\n    \"autoprefixer\": \"^10.4.16\",\n    \"eslint\": \"^8\",\n    \"eslint-config-next\": \"14.0.4\",\n    \"postcss\": \"^8.4.32\",\n    \"tailwindcss\": \"^3.3.6\",\n    \"typescript\": \"^5\"\n  }\n}\n"
    },
    {
        "filePath": "tailwind.config.ts",
        "data": "import { type Config } from 'tailwindcss'\nimport defaultTheme from 'tailwindcss/defaultTheme'\n\nexport default {\n  content: ['./src/**/*.{js,jsx,mdx,ts,tsx}'],\n  theme: {\n    fontSize: {\n      xs: ['0.75rem', { lineHeight: '1rem' }],\n      sm: ['0.875rem', { lineHeight: '1.5rem' }],\n      base: ['1rem', { lineHeight: '1.75rem' }],\n      lg: ['1.125rem', { lineHeight: '1.75rem' }],\n      xl: ['1.25rem', { lineHeight: '2rem' }],\n      '2xl': ['1.5rem', { lineHeight: '2.25rem' }],\n      '3xl': ['1.75rem', { lineHeight: '2.25rem' }],\n      '4xl': ['2rem', { lineHeight: '2.5rem' }],\n      '5xl': ['2.5rem', { lineHeight: '3rem' }],\n      '6xl': ['3rem', { lineHeight: '3.5rem' }],\n      '7xl': ['4rem', { lineHeight: '4.5rem' }],\n    },\n    extend: {\n      borderRadius: {\n        '4xl': '2.5rem',\n      },\n      fontFamily: {\n        sans: ['Mona Sans', ...defaultTheme.fontFamily.sans],\n        display: [\n          ['Mona Sans', ...defaultTheme.fontFamily.sans],\n          { fontVariationSettings: '\"wdth\" 125' },\n        ],\n      },\n    },\n  },\n  plugins: [],\n} satisfies Config\n"
    },
    {
        "filePath": "tsconfig.json",
        "data": "{\n  \"compilerOptions\": {\n    \"target\": \"es6\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"bundler\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"plugins\": [\n      {\n        \"name\": \"next\"\n      }\n    ],\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\"],\n  \"exclude\": [\"node_modules\"]\n}\n"
    },
    {
        "filePath": "postcss.config.js",
        "data": "module.exports = {\n  plugins: {\n    'tailwindcss/nesting': {},\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n"
    },
    {
        "filePath": "next.config.mjs",
        "data": "import rehypeShiki from '@leafac/rehype-shiki'\nimport nextMDX from '@next/mdx'\nimport { Parser } from 'acorn'\nimport jsx from 'acorn-jsx'\nimport escapeStringRegexp from 'escape-string-regexp'\nimport * as path from 'path'\nimport { recmaImportImages } from 'recma-import-images'\nimport remarkGfm from 'remark-gfm'\nimport { remarkRehypeWrap } from 'remark-rehype-wrap'\nimport remarkUnwrapImages from 'remark-unwrap-images'\nimport shiki from 'shiki'\nimport { unifiedConditional } from 'unified-conditional'\n\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  pageExtensions: ['js', 'jsx', 'ts', 'tsx', 'mdx'],\n}\n\nfunction remarkMDXLayout(source, metaName) {\n  let parser = Parser.extend(jsx())\n  let parseOptions = { ecmaVersion: 'latest', sourceType: 'module' }\n\n  return (tree) => {\n    let imp = `import _Layout from '${source}'`\n    let exp = `export default function Layout(props) {\n      return <_Layout {...props} ${metaName}={${metaName}} />\n    }`\n\n    tree.children.push(\n      {\n        type: 'mdxjsEsm',\n        value: imp,\n        data: { estree: parser.parse(imp, parseOptions) },\n      },\n      {\n        type: 'mdxjsEsm',\n        value: exp,\n        data: { estree: parser.parse(exp, parseOptions) },\n      },\n    )\n  }\n}\n\nexport default async function config() {\n  let highlighter = await shiki.getHighlighter({\n    theme: 'css-variables',\n  })\n\n  let withMDX = nextMDX({\n    extension: /\\.mdx$/,\n    options: {\n      recmaPlugins: [recmaImportImages],\n      rehypePlugins: [\n        [rehypeShiki, { highlighter }],\n        [\n          remarkRehypeWrap,\n          {\n            node: { type: 'mdxJsxFlowElement', name: 'Typography' },\n            start: ':root > :not(mdxJsxFlowElement)',\n            end: ':root > mdxJsxFlowElement',\n          },\n        ],\n      ],\n      remarkPlugins: [\n        remarkGfm,\n        remarkUnwrapImages,\n        [\n          unifiedConditional,\n          [\n            new RegExp(`^${escapeStringRegexp(path.resolve('src/app/blog'))}`),\n            [[remarkMDXLayout, '@/app/blog/wrapper', 'article']],\n          ],\n          [\n            new RegExp(`^${escapeStringRegexp(path.resolve('src/app/work'))}`),\n            [[remarkMDXLayout, '@/app/work/wrapper', 'caseStudy']],\n          ],\n        ],\n      ],\n    },\n  })\n\n  return withMDX(nextConfig)\n}\n"
    },
    {
        "filePath": "prettier.config.js",
        "data": "/** @type {import('prettier').Options} */\nmodule.exports = {\n  singleQuote: true,\n  semi: false,\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n"
    },
    {
        "filePath": ".eslintrc.json",
        "data": "{\n  \"extends\": \"next/core-web-vitals\"\n}\n"
    },
    {
        "filePath": "commit-push.sh",
        "data": "#!/bin/bash\n\nif [ -z \"$1\" ]; then\n  echo \"Missing commit message\"\n  exit 1\nfi\n\nyarn build\ngit add .\ngit commit -m \"$1\"\ngit push origin main\n"
    },
    {
        "filePath": "mdx-components.tsx",
        "data": "import { type MDXComponents as MDXComponentsType } from 'mdx/types'\n\nimport { MDXComponents } from '@/components/MDXComponents'\n\nexport function useMDXComponents(components: MDXComponentsType) {\n  return {\n    ...components,\n    ...MDXComponents,\n  }\n}\n"
    },
    {
        "filePath": "src/app/not-found.tsx",
        "data": "import Link from 'next/link'\n\nimport { Container } from '@/components/Container'\nimport { FadeIn } from '@/components/FadeIn'\n\nexport default function NotFound() {\n  return (\n    <Container className=\"flex h-full items-center pt-24 sm:pt-32 lg:pt-40\">\n      <FadeIn className=\"flex max-w-xl flex-col items-center text-center\">\n        <p className=\"font-display text-4xl font-semibold text-neutral-950 sm:text-5xl\">\n          404\n        </p>\n        <h1 className=\"mt-4 font-display text-2xl font-semibold text-neutral-950\">\n          Page not found\n        </h1>\n        <p className=\"mt-2 text-sm text-neutral-600\">\n          Sorry, we couldn\u2019t find the page you\u2019re looking for.\n        </p>\n        <Link\n          href=\"/\"\n          className=\"mt-4 text-sm font-semibold text-neutral-950 transition hover:text-neutral-700\"\n        >\n          Go to the home page\n        </Link>\n      </FadeIn>\n    </Container>\n  )\n}\n"
    },
    {
        "filePath": "src/app/layout.tsx",
        "data": "import { type Metadata } from 'next'\nimport { Analytics } from '@vercel/analytics/react';\nimport { RootLayout } from '@/components/RootLayout'\n\nimport '@/styles/tailwind.css'\n\nexport const metadata: Metadata = {\n  title: {\n    template: '%s - Upscaler labs',\n    default: 'Upscaler labs - developer studio for modern apps',\n  },\n}\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\" className=\"h-full bg-neutral-950 text-base antialiased\">\n      <body className=\"flex min-h-full flex-col\">\n        <RootLayout>{children}</RootLayout>\n        <Analytics />\n      </body>\n    </html>\n  )\n}\n"
    },
    {
        "filePath": "src/app/page.tsx",
        "data": "import { type Metadata } from 'next'\nimport Image from 'next/image'\nimport Link from 'next/link'\n\nimport { ContactSection } from '@/components/ContactSection'\nimport { Container } from '@/components/Container'\nimport { FadeIn, FadeInStagger } from '@/components/FadeIn'\nimport { List, ListItem } from '@/components/List'\nimport { SectionIntro } from '@/components/SectionIntro'\nimport { StylizedImage } from '@/components/StylizedImage'\nimport { Testimonial } from '@/components/Testimonial'\n\nimport blogSiteDemo from '@/images/clients/blog-site/blog.png'\nimport saasSiteDemo from '@/images/clients/saas-site/saas.png'\nimport retailSiteDemo from '@/images/clients/retail-site/retail.png'\nimport mobileSiteDemo from '@/images/clients/mobile-site/mobile.png'\nimport confSiteDemo from '@/images/clients/conf-site/conf.png'\nimport docsSiteDemo from '@/images/clients/docs-site/docs.png'\n\nimport logoPhobiaDark from '@/images/clients/phobia/logo-dark.svg'\nimport imageLaptop from '@/images/laptop.jpg'\nimport { type CaseStudy, type MDXEntry, loadCaseStudies } from '@/lib/mdx'\n\nconst clients = [\n  ['Green Life', saasSiteDemo],\n\n  ['Family Fund', blogSiteDemo],\n  ['Unseal', confSiteDemo],\n  ['Mail Smirk', mobileSiteDemo],\n  ['Home Work', retailSiteDemo],\n  ['Phobia', docsSiteDemo],\n \n\n]\n\nfunction Clients() {\n  return (\n    <div className=\"mt-24 rounded-4xl bg-neutral-950 py-20 sm:mt-32 sm:py-32 lg:mt-56\">\n      <Container>\n        <FadeIn className=\"flex items-center gap-x-8\">\n          <h2 className=\"text-center font-display font-semibold tracking-wider text-white sm:text-left\">\n          Stunning websites for every need\n          </h2>\n       \n          <div className=\"h-px flex-auto bg-neutral-800\" />\n       \n        </FadeIn>\n        <p className=\"mt-2 text-center font-display text-sm tracking-wider text-white sm:text-left\">From landing pages to blogs and marketing sites, we&#39;ve got you covered.</p>\n        <FadeInStagger faster>\n  <ul role=\"list\" className=\"mt-10 grid grid-cols-2 gap-x-8 gap-y-10 lg:grid-cols-3\">\n    {clients.map(([client, logo], index) => (\n      <li key={index}>\n        <FadeIn>\n          <Image src={logo} alt={String(client)} unoptimized className='rounded' />\n        </FadeIn>\n      </li>\n    ))}\n  </ul>\n</FadeInStagger>\n      </Container>\n    </div>\n  )\n}\n\nfunction Services() {\n  return (\n    <>\n      <SectionIntro\n        eyebrow=\"Services\"\n        title=\"We help you identify, explore and respond to new opportunities.\"\n        className=\"mt-24 sm:mt-32 lg:mt-40\"\n      >\n        <p>\n        Harness the power of the internet with custom web, mobile, and software development to drive your business forward.\n        </p>\n      </SectionIntro>\n      <Container className=\"mt-16\">\n        <div className=\"lg:flex lg:items-center lg:justify-end\">\n          <div className=\"flex justify-center lg:w-1/2 lg:justify-end lg:pr-12\">\n            <FadeIn className=\"w-[33.75rem] flex-none lg:w-[45rem]\">\n              <StylizedImage\n                src={imageLaptop}\n                sizes=\"(min-width: 1024px) 41rem, 31rem\"\n                className=\"justify-center lg:justify-end\"\n              />\n            </FadeIn>\n          </div>\n          <List className=\"mt-16 lg:mt-0 lg:w-1/2 lg:min-w-[33rem] lg:pl-4\">\n            <ListItem title=\"AI Wrappers / AI powered apps\">\n              We specialise in crafting beautiful, high quality AI powered apps. Whether you are looking for a simple chatbot or a complex AI powered app, we have you covered.\n            </ListItem>\n            <ListItem title=\"Application development\">\n              We have a team of skilled developers who are experts in the latest\n              app frameworks, such as iOS, SwiftUI, Android and React.\n            </ListItem>\n            <ListItem title=\"Innovative Web Development\">\n            We leverage optimal frameworks tailored to each project, blending cutting-edge with time-tested solutions..\n            </ListItem>\n\n          </List>\n        </div>\n      </Container>\n    </>\n  )\n}\n\nexport const metadata: Metadata = {\n  description:\n    'We are a development studio working at the intersection of AI and real world use cases.',\n}\n\nexport default async function Home() {\n  let caseStudies = (await loadCaseStudies()).slice(0, 3)\n\n  return (\n    <>\n      <Container className=\"mt-24 sm:mt-32 md:mt-56\">\n        <FadeIn className=\"max-w-3xl\">\n          <h1 className=\"font-display text-5xl font-medium tracking-tight text-neutral-950 [text-wrap:balance] sm:text-7xl\">\n          Developing software that makes an impact.\n          </h1>\n          <p className=\"mt-6 text-xl text-neutral-600\">\n          We create websites, mobile apps, and software solutions that drive meaningful change and deliver tangible results for your business.\n          </p>\n        </FadeIn>\n      </Container>\n\n  \n\n      <Clients />\n\n      <Services />\n\n\n      <Testimonial\n        className=\"mt-24 sm:mt-32 lg:mt-40\"\n        client={{ name: 'Phobia', logo: logoPhobiaDark }}\n      >\n        The team at Upscaler labs went above and beyond with our project, their understanding of current LLM trend is second to none.\n      </Testimonial>\n\n\n      <ContactSection />\n    </>\n  )\n}\n"
    },
    {
        "filePath": "src/app/api/send-email.js",
        "data": "import nodemailer from 'nodemailer';\n\nexport default async function handler(req, res) {\n  if (req.method === 'POST') {\n    const { name, email, company, phone, message } = req.body;\n\n    const transporter = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        user: 'digitalcurrencymonger@gmail.com',\n        pass: 'qrzordmmpzcnwzgm',\n      },\n    });\n\n    const mailOptions = {\n      from: email,\n      to: 'jerry@upscaler.net',\n      subject: 'New Inquiry',\n      text: `\n        Name: ${name}\n        Email: ${email}\n        Company: ${company}\n        Phone: ${phone}\n        Message: ${message}\n      `,\n    };\n\n    try {\n      await transporter.sendMail(mailOptions);\n      res.status(200).json({ message: 'Email sent successfully' });\n    } catch (error) {\n      console.error('Error sending email:', error);\n      res.status(500).json({ message: 'Error sending email' });\n    }\n  } else {\n    res.status(405).json({ message: 'Method not allowed' });\n  }\n}"
    },
    {
        "filePath": "src/app/contact/page.tsx",
        "data": "import { useId } from 'react'\nimport { type Metadata } from 'next'\nimport Link from 'next/link'\n\nimport { Border } from '@/components/Border'\nimport { Button } from '@/components/Button'\nimport { Container } from '@/components/Container'\nimport { FadeIn } from '@/components/FadeIn'\nimport { Offices } from '@/components/Offices'\nimport { PageIntro } from '@/components/PageIntro'\nimport { SocialMedia } from '@/components/SocialMedia'\n\nfunction TextInput({\n  label,\n  ...props\n}: React.ComponentPropsWithoutRef<'input'> & { label: string }) {\n  let id = useId()\n\n  return (\n    <div className=\"group relative z-0 transition-all focus-within:z-10\">\n      <input\n        type=\"text\"\n        id={id}\n        {...props}\n        placeholder=\" \"\n        className=\"peer block w-full border border-neutral-300 bg-transparent px-6 pb-4 pt-12 text-base/6 text-neutral-950 ring-4 ring-transparent transition focus:border-neutral-950 focus:outline-none focus:ring-neutral-950/5 group-first:rounded-t-2xl group-last:rounded-b-2xl\"\n      />\n      <label\n        htmlFor={id}\n        className=\"pointer-events-none absolute left-6 top-1/2 -mt-3 origin-left text-base/6 text-neutral-500 transition-all duration-200 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:font-semibold peer-focus:text-neutral-950 peer-[:not(:placeholder-shown)]:-translate-y-4 peer-[:not(:placeholder-shown)]:scale-75 peer-[:not(:placeholder-shown)]:font-semibold peer-[:not(:placeholder-shown)]:text-neutral-950\"\n      >\n        {label}\n      </label>\n    </div>\n  )\n}\n\nfunction RadioInput({\n  label,\n  ...props\n}: React.ComponentPropsWithoutRef<'input'> & { label: string }) {\n  return (\n    <label className=\"flex gap-x-3\">\n      <input\n        type=\"radio\"\n        {...props}\n        className=\"h-6 w-6 flex-none appearance-none rounded-full border border-neutral-950/20 outline-none checked:border-[0.5rem] checked:border-neutral-950 focus-visible:ring-1 focus-visible:ring-neutral-950 focus-visible:ring-offset-2\"\n      />\n      <span className=\"text-base/6 text-neutral-950\">{label}</span>\n    </label>\n  )\n}\n\n\n\nfunction ContactDetails() {\n  return (\n    <FadeIn>\n\n\n<Border className=\"mt-16 pt-16\">\n        <h2 className=\"font-display text-base font-semibold text-neutral-950\">\n         Send us a message on WhatsApp\n        </h2>\n        <a href=\"https://wa.me/41779627832\" target=\"_blank\" rel=\"noopener noreferrer\">\n       <div className='mt-6 cursor-pointer' ><svg fill=\"#000000\" height=\"70px\" width=\"70px\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" \n\t viewBox=\"0 0 308 308\" >\n<g id=\"XMLID_468_\">\n\t<path id=\"XMLID_469_\" d=\"M227.904,176.981c-0.6-0.288-23.054-11.345-27.044-12.781c-1.629-0.585-3.374-1.156-5.23-1.156\n\t\tc-3.032,0-5.579,1.511-7.563,4.479c-2.243,3.334-9.033,11.271-11.131,13.642c-0.274,0.313-0.648,0.687-0.872,0.687\n\t\tc-0.201,0-3.676-1.431-4.728-1.888c-24.087-10.463-42.37-35.624-44.877-39.867c-0.358-0.61-0.373-0.887-0.376-0.887\n\t\tc0.088-0.323,0.898-1.135,1.316-1.554c1.223-1.21,2.548-2.805,3.83-4.348c0.607-0.731,1.215-1.463,1.812-2.153\n\t\tc1.86-2.164,2.688-3.844,3.648-5.79l0.503-1.011c2.344-4.657,0.342-8.587-0.305-9.856c-0.531-1.062-10.012-23.944-11.02-26.348\n\t\tc-2.424-5.801-5.627-8.502-10.078-8.502c-0.413,0,0,0-1.732,0.073c-2.109,0.089-13.594,1.601-18.672,4.802\n\t\tc-5.385,3.395-14.495,14.217-14.495,33.249c0,17.129,10.87,33.302,15.537,39.453c0.116,0.155,0.329,0.47,0.638,0.922\n\t\tc17.873,26.102,40.154,45.446,62.741,54.469c21.745,8.686,32.042,9.69,37.896,9.69c0.001,0,0.001,0,0.001,0\n\t\tc2.46,0,4.429-0.193,6.166-0.364l1.102-0.105c7.512-0.666,24.02-9.22,27.775-19.655c2.958-8.219,3.738-17.199,1.77-20.458\n\t\tC233.168,179.508,230.845,178.393,227.904,176.981z\"/>\n\t<path id=\"XMLID_470_\" d=\"M156.734,0C73.318,0,5.454,67.354,5.454,150.143c0,26.777,7.166,52.988,20.741,75.928L0.212,302.716\n\t\tc-0.484,1.429-0.124,3.009,0.933,4.085C1.908,307.58,2.943,308,4,308c0.405,0,0.813-0.061,1.211-0.188l79.92-25.396\n\t\tc21.87,11.685,46.588,17.853,71.604,17.853C240.143,300.27,308,232.923,308,150.143C308,67.354,240.143,0,156.734,0z\n\t\t M156.734,268.994c-23.539,0-46.338-6.797-65.936-19.657c-0.659-0.433-1.424-0.655-2.194-0.655c-0.407,0-0.815,0.062-1.212,0.188\n\t\tl-40.035,12.726l12.924-38.129c0.418-1.234,0.209-2.595-0.561-3.647c-14.924-20.392-22.813-44.485-22.813-69.677\n\t\tc0-65.543,53.754-118.867,119.826-118.867c66.064,0,119.812,53.324,119.812,118.867\n\t\tC276.546,215.678,222.799,268.994,156.734,268.994z\"/>\n</g>\n</svg></div></a>\n     \n      </Border>\n\n\n<Border className=\"mt-16 pt-16\">\n        <h2 className=\"font-display text-base font-semibold text-neutral-950\">\n          Email us\n        </h2>\n        <dl className=\"mt-6 grid grid-cols-1 gap-8 text-sm sm:grid-cols-2\">\n          {[\n            ['Info', 'jerry@upscaler.net'],\n          \n          ].map(([label, email]) => (\n            <div key={email}>\n              <dt className=\"font-semibold text-neutral-950\">{label}</dt>\n              <dd>\n                <Link\n                  href={`mailto:${email}`}\n                  className=\"text-neutral-600 hover:text-neutral-950\"\n                >\n                  {email}\n                </Link>\n              </dd>\n            </div>\n          ))}\n        </dl>\n      </Border>\n      <Border className=\"mt-16 pt-16\">\n      \n      </Border>\n \n      <h2 className=\"font-display text-base font-semibold text-neutral-950\">\n        Our offices\n      </h2>\n      <p className=\"mt-6 text-base text-neutral-600\">\n        Prefer doing things in person? \n      </p>\n\n      <Offices className=\"mt-10 grid grid-cols-1 gap-8 sm:grid-cols-2\" />\n\n\n      <Border className=\"mt-16 pt-16\">\n      \n      </Border>\n    </FadeIn>\n  )\n}\n\nexport const metadata: Metadata = {\n  title: 'Contact Us',\n  description: 'Let\u2019s work together. We can\u2019t wait to hear from you.',\n}\n\nexport default function Contact() {\n  return (\n    <>\n      <PageIntro eyebrow=\"Contact us\" title=\"Let\u2019s work together\">\n        <p>We can\u2019t wait to hear from you.</p>\n      </PageIntro>\n\n      <Container className=\"mt-24 sm:mt-32 lg:mt-40\">\n        <div className=\"grid grid-cols-1 gap-x-8 gap-y-24 lg:grid-cols-2\">\n         \n          <ContactDetails />\n        </div>\n      </Container>\n    </>\n  )\n}"
    },
    {
        "filePath": "src/styles/components.css",
        "data": "@tailwind components;\n\n@import './typography.css';\n"
    },
    {
        "filePath": "src/styles/tailwind.css",
        "data": "@import './base.css';\n@import './components.css';\n@import './utilities.css';\n"
    },
    {
        "filePath": "src/styles/utilities.css",
        "data": "@tailwind utilities;\n"
    },
    {
        "filePath": "src/styles/base.css",
        "data": "@tailwind base;\n\n@font-face {\n  font-family: 'Mona Sans';\n  font-weight: 200 900;\n  font-display: block;\n  font-style: normal;\n  font-stretch: 75% 125%;\n  src: url('../fonts/Mona-Sans.var.woff2') format('woff2');\n}\n"
    },
    {
        "filePath": "src/styles/typography.css",
        "data": ".typography {\n  color: theme(colors.neutral.950);\n  font-size: theme(fontSize.xl);\n  line-height: theme(fontSize.xl[1].lineHeight);\n\n  --shiki-color-text: theme(colors.white);\n  --shiki-color-background: theme(colors.neutral.950);\n  --shiki-token-constant: theme(colors.neutral.300);\n  --shiki-token-string: theme(colors.neutral.400);\n  --shiki-token-comment: theme(colors.neutral.500);\n  --shiki-token-keyword: theme(colors.neutral.400);\n  --shiki-token-parameter: theme(colors.neutral.400);\n  --shiki-token-function: theme(colors.neutral.300);\n  --shiki-token-string-expression: theme(colors.neutral.300);\n  --shiki-token-punctuation: theme(colors.neutral.400);\n\n  :where(.typography > *) {\n    margin-top: theme(spacing.6);\n    margin-bottom: theme(spacing.6);\n  }\n\n  /* Headings */\n  :where(h2) {\n    font-weight: theme(fontWeight.semibold);\n    font-family: theme(fontFamily.display);\n    font-variation-settings: theme(fontFamily.display[1].fontVariationSettings);\n    font-size: theme(fontSize.2xl);\n    line-height: theme(fontSize.2xl[1].lineHeight);\n    margin-top: theme(spacing.16);\n  }\n\n  :where(h3) {\n    font-weight: theme(fontWeight.semibold);\n    font-family: theme(fontFamily.display);\n    font-variation-settings: theme(fontFamily.display[1].fontVariationSettings);\n    font-size: theme(fontSize.xl);\n    line-height: theme(fontSize.xl[1].lineHeight);\n    margin-top: theme(spacing.10);\n  }\n\n  :where(h2 + h3) {\n    margin-top: 0;\n  }\n\n  /* Lists */\n  :where(ul, ol) {\n    padding-left: 1.5rem;\n  }\n\n  :where(ul) {\n    list-style-type: disc;\n  }\n\n  :where(ol) {\n    list-style-type: decimal;\n  }\n\n  :where(li) {\n    padding-left: theme(spacing.3);\n    margin-top: theme(spacing.6);\n  }\n\n  :where(li)::marker {\n    color: theme(colors.neutral.500);\n  }\n\n  :where(li > *),\n  :where(li li) {\n    margin-top: theme(spacing.4);\n  }\n\n  :where(ol > li)::marker {\n    font-size: theme(fontSize.base);\n    font-weight: theme(fontWeight.semibold);\n  }\n\n  /* Tables */\n  :where(table) {\n    width: 100%;\n    text-align: left;\n    font-size: theme(fontSize.base);\n    line-height: theme(fontSize.base[1].lineHeight);\n  }\n\n  :where(th) {\n    font-weight: theme(fontWeight.semibold);\n  }\n\n  :where(thead th) {\n    padding-bottom: theme(spacing.6);\n    border-bottom: 1px solid theme(colors.neutral.950);\n  }\n\n  :where(td) {\n    vertical-align: top;\n    padding-top: theme(spacing.6);\n    padding-bottom: theme(spacing.6);\n    border-bottom: 1px solid theme(colors.neutral.950 / 0.1);\n  }\n\n  :where(:is(th, td):not(:last-child)) {\n    padding-right: theme(spacing.6);\n  }\n\n  /* Code blocks */\n  :where(pre) {\n    display: flex;\n    background-color: theme(colors.neutral.950);\n    border-radius: theme(borderRadius.4xl);\n    overflow-x: auto;\n    margin-top: theme(spacing.10);\n    margin-bottom: theme(spacing.10);\n    margin-left: calc(-1 * theme(spacing.6));\n    margin-right: calc(-1 * theme(spacing.6));\n\n    @screen sm {\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n\n  :where(pre code) {\n    flex: none;\n    padding: theme(padding.8) theme(padding.6);\n    font-size: theme(fontSize.base);\n    line-height: theme(lineHeight.8);\n    color: theme(colors.white);\n\n    @screen sm {\n      padding: theme(spacing.10);\n    }\n  }\n\n  /* <hr> */\n  :where(hr) {\n    border-color: theme(colors.neutral.950 / 0.1);\n    margin-top: theme(spacing.24);\n    margin-bottom: theme(spacing.24);\n  }\n\n  /* Inline text */\n  :where(a) {\n    text-decoration: underline;\n    text-decoration-thickness: 1px;\n    text-underline-offset: 0.15em;\n    text-decoration-skip-ink: none;\n    font-weight: theme(fontWeight.semibold);\n  }\n\n  :where(strong) {\n    font-weight: theme(fontWeight.semibold);\n  }\n\n  :where(code:not(pre code)) {\n    font-size: calc(18 / 20 * 1em);\n    font-weight: theme(fontWeight.semibold);\n\n    &::before,\n    &::after {\n      content: '`';\n    }\n  }\n\n  :where(h2 code, h3 code) {\n    font-weight: theme(fontWeight.bold);\n  }\n\n  /* Figures */\n  :where(figure) {\n    margin-top: theme(spacing.32);\n    margin-bottom: theme(spacing.32);\n  }\n\n  /* Spacing overrides */\n  :where(.typography:first-child > :first-child),\n  :where(li > :first-child) {\n    margin-top: 0 !important;\n  }\n\n  :where(.typography:last-child > :last-child),\n  :where(li > :last-child) {\n    margin-bottom: 0 !important;\n  }\n}\n"
    },
    {
        "filePath": "src/lib/formatDate.ts",
        "data": "export function formatDate(dateString: string) {\n  let parts = dateString.split('-')\n  let hasDay = parts.length > 2\n\n  return new Date(`${dateString}Z`).toLocaleDateString('en-US', {\n    day: hasDay ? 'numeric' : undefined,\n    month: 'long',\n    year: 'numeric',\n    timeZone: 'UTC',\n  })\n}\n"
    },
    {
        "filePath": "src/lib/mdx.ts",
        "data": "import { type ImageProps } from 'next/image'\nimport glob from 'fast-glob'\n\nasync function loadEntries<T extends { date: string }>(\n  directory: string,\n  metaName: string,\n): Promise<Array<MDXEntry<T>>> {\n  return (\n    await Promise.all(\n      (await glob('**/page.mdx', { cwd: `src/app/${directory}` })).map(\n        async (filename) => {\n          let metadata = (await import(`../app/${directory}/${filename}`))[\n            metaName\n          ] as T\n          return {\n            ...metadata,\n            metadata,\n            href: `/${directory}/${filename.replace(/\\/page\\.mdx$/, '')}`,\n          }\n        },\n      ),\n    )\n  ).sort((a, b) => b.date.localeCompare(a.date))\n}\n\ntype ImagePropsWithOptionalAlt = Omit<ImageProps, 'alt'> & { alt?: string }\n\nexport type MDXEntry<T> = T & { href: string; metadata: T }\n\nexport interface Article {\n  date: string\n  title: string\n  description: string\n  author: {\n    name: string\n    role: string\n    image: ImagePropsWithOptionalAlt\n  }\n}\n\nexport interface CaseStudy {\n  date: string\n  client: string\n  title: string\n  description: string\n  summary: Array<string>\n  logo: ImageProps['src']\n  image: ImagePropsWithOptionalAlt\n  service: string\n  testimonial: {\n    author: {\n      name: string\n      role: string\n    }\n    content: string\n  }\n}\n\nexport function loadArticles() {\n  return loadEntries<Article>('blog', 'article')\n}\n\nexport function loadCaseStudies() {\n  return loadEntries<CaseStudy>('work', 'caseStudy')\n}\n"
    },
    {
        "filePath": "src/components/FadeIn.tsx",
        "data": "'use client'\n\nimport { createContext, useContext } from 'react'\nimport { motion, useReducedMotion } from 'framer-motion'\n\nconst FadeInStaggerContext = createContext(false)\n\nconst viewport = { once: true, margin: '0px 0px -200px' }\n\nexport function FadeIn(\n  props: React.ComponentPropsWithoutRef<typeof motion.div>,\n) {\n  let shouldReduceMotion = useReducedMotion()\n  let isInStaggerGroup = useContext(FadeInStaggerContext)\n\n  return (\n    <motion.div\n      variants={{\n        hidden: { opacity: 0, y: shouldReduceMotion ? 0 : 24 },\n        visible: { opacity: 1, y: 0 },\n      }}\n      transition={{ duration: 0.5 }}\n      {...(isInStaggerGroup\n        ? {}\n        : {\n            initial: 'hidden',\n            whileInView: 'visible',\n            viewport,\n          })}\n      {...props}\n    />\n  )\n}\n\nexport function FadeInStagger({\n  faster = false,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof motion.div> & { faster?: boolean }) {\n  return (\n    <FadeInStaggerContext.Provider value={true}>\n      <motion.div\n        initial=\"hidden\"\n        whileInView=\"visible\"\n        viewport={viewport}\n        transition={{ staggerChildren: faster ? 0.12 : 0.2 }}\n        {...props}\n      />\n    </FadeInStaggerContext.Provider>\n  )\n}\n"
    },
    {
        "filePath": "src/components/Offices.tsx",
        "data": "import clsx from 'clsx'\n\nfunction Office({\n  name,\n  children,\n  invert = false,\n}: {\n  name: string\n  children: React.ReactNode\n  invert?: boolean\n}) {\n  return (\n    <address\n      className={clsx(\n        'text-sm not-italic',\n        invert ? 'text-neutral-300' : 'text-neutral-600',\n      )}\n    >\n      <strong className={invert ? 'text-white' : 'text-neutral-950'}>\n        {name}\n      </strong>\n      <br />\n      {children}\n    </address>\n  )\n}\n\nexport function Offices({\n  invert = false,\n  ...props\n}: React.ComponentPropsWithoutRef<'ul'> & { invert?: boolean }) {\n  return (\n    <ul role=\"list\" {...props}>\n          <li>\n        <Office name=\"Zurich\" invert={invert}>\n        Hofwiesenstrasse\n          <br />\n          Gattikon, 8136\n          <br />\n          Switzerland\n        </Office>\n      </li>\n      <li>\n        <Office name=\"London\" invert={invert}>\n        71-75 Shelton Street\n          <br />\n          Covent Garden, London, WC2H 9JQ\n          <br />\n          United Kingdom\n        </Office>\n      </li>\n  \n\n    </ul>\n  )\n}\n"
    },
    {
        "filePath": "src/components/Testimonial.tsx",
        "data": "import Image, { type ImageProps } from 'next/image'\nimport clsx from 'clsx'\n\nimport { Container } from '@/components/Container'\nimport { FadeIn } from '@/components/FadeIn'\nimport { GridPattern } from '@/components/GridPattern'\n\nexport function Testimonial({\n  children,\n  client,\n  className,\n}: {\n  children: React.ReactNode\n  client: { logo: ImageProps['src']; name: string }\n  className?: string\n}) {\n  return (\n    <div\n      className={clsx(\n        'relative isolate bg-neutral-50 py-16 sm:py-28 md:py-32',\n        className,\n      )}\n    >\n      <GridPattern\n        className=\"absolute inset-0 -z-10 h-full w-full fill-neutral-100 stroke-neutral-950/5 [mask-image:linear-gradient(to_bottom_left,white_50%,transparent_60%)]\"\n        yOffset={-256}\n      />\n      <Container>\n        <FadeIn>\n          <figure className=\"mx-auto max-w-4xl\">\n            <blockquote className=\"relative font-display text-3xl font-medium tracking-tight text-neutral-950 sm:text-4xl\">\n              <p className=\"before:content-['\u201c'] after:content-['\u201d'] sm:before:absolute sm:before:right-full\">\n                {children}\n              </p>\n            </blockquote>\n            <figcaption className=\"mt-10\">\n              <Image src={client.logo} alt={client.name} unoptimized />\n            </figcaption>\n          </figure>\n        </FadeIn>\n      </Container>\n    </div>\n  )\n}\n"
    },
    {
        "filePath": "src/components/TagList.tsx",
        "data": "import clsx from 'clsx'\n\nexport function TagList({\n  children,\n  className,\n}: {\n  children: React.ReactNode\n  className?: string\n}) {\n  return (\n    <ul role=\"list\" className={clsx(className, 'flex flex-wrap gap-4')}>\n      {children}\n    </ul>\n  )\n}\n\nexport function TagListItem({\n  children,\n  className,\n}: {\n  children: React.ReactNode\n  className?: string\n}) {\n  return (\n    <li\n      className={clsx(\n        'rounded-full bg-neutral-100 px-4 py-1.5 text-base text-neutral-600',\n        className,\n      )}\n    >\n      {children}\n    </li>\n  )\n}\n"
    },
    {
        "filePath": "src/components/PageLinks.tsx",
        "data": "import Link from 'next/link'\nimport clsx from 'clsx'\n\nimport { Border } from '@/components/Border'\nimport { Container } from '@/components/Container'\nimport { FadeIn, FadeInStagger } from '@/components/FadeIn'\nimport { GridPattern } from '@/components/GridPattern'\nimport { SectionIntro } from '@/components/SectionIntro'\nimport { formatDate } from '@/lib/formatDate'\n\nfunction ArrowIcon(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg viewBox=\"0 0 24 6\" aria-hidden=\"true\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M24 3 18 .5v2H0v1h18v2L24 3Z\"\n      />\n    </svg>\n  )\n}\n\ninterface Page {\n  href: string\n  date: string\n  title: string\n  description: string\n}\n\nfunction PageLink({ page }: { page: Page }) {\n  return (\n    <article key={page.href}>\n      <Border\n        position=\"left\"\n        className=\"relative flex flex-col items-start pl-8\"\n      >\n        <h3 className=\"mt-6 text-base font-semibold text-neutral-950\">\n          {page.title}\n        </h3>\n        <time\n          dateTime={page.date}\n          className=\"order-first text-sm text-neutral-600\"\n        >\n          {formatDate(page.date)}\n        </time>\n        <p className=\"mt-2.5 text-base text-neutral-600\">{page.description}</p>\n        <Link\n          href={page.href}\n          className=\"mt-6 flex gap-x-3 text-base font-semibold text-neutral-950 transition hover:text-neutral-700\"\n          aria-label={`Read more: ${page.title}`}\n        >\n          Read more\n          <ArrowIcon className=\"w-6 flex-none fill-current\" />\n          <span className=\"absolute inset-0\" />\n        </Link>\n      </Border>\n    </article>\n  )\n}\n\nexport function PageLinks({\n  title,\n  pages,\n  intro,\n  className,\n}: {\n  title: string\n  pages: Array<Page>\n  intro?: string\n  className?: string\n}) {\n  return (\n    <div className={clsx('relative pt-24 sm:pt-32 lg:pt-40', className)}>\n      <div className=\"absolute inset-x-0 top-0 -z-10 h-[884px] overflow-hidden rounded-t-4xl bg-gradient-to-b from-neutral-50\">\n        <GridPattern\n          className=\"absolute inset-0 h-full w-full fill-neutral-100 stroke-neutral-950/5 [mask-image:linear-gradient(to_bottom_left,white_40%,transparent_50%)]\"\n          yOffset={-270}\n        />\n      </div>\n\n      <SectionIntro title={title} smaller>\n        {intro && <p>{intro}</p>}\n      </SectionIntro>\n\n      <Container className={intro ? 'mt-24' : 'mt-16'}>\n        <FadeInStagger className=\"grid grid-cols-1 gap-x-8 gap-y-16 lg:grid-cols-2\">\n          {pages.map((page) => (\n            <FadeIn key={page.href}>\n              <PageLink page={page} />\n            </FadeIn>\n          ))}\n        </FadeInStagger>\n      </Container>\n    </div>\n  )\n}\n"
    },
    {
        "filePath": "src/components/Blockquote.tsx",
        "data": "import Image, { type ImageProps } from 'next/image'\nimport clsx from 'clsx'\n\nimport { Border } from '@/components/Border'\n\ntype ImagePropsWithOptionalAlt = Omit<ImageProps, 'alt'> & { alt?: string }\n\nfunction BlockquoteWithImage({\n  author,\n  children,\n  className,\n  image,\n}: {\n  author: { name: string; role: string }\n  children: React.ReactNode\n  className?: string\n  image: ImagePropsWithOptionalAlt\n}) {\n  return (\n    <figure\n      className={clsx(\n        'grid grid-cols-[auto,1fr] items-center gap-x-4 gap-y-8 sm:grid-cols-12 sm:grid-rows-[1fr,auto,auto,1fr] sm:gap-x-10 lg:gap-x-16',\n        className,\n      )}\n    >\n      <blockquote className=\"col-span-2 text-xl/7 text-neutral-600 sm:col-span-7 sm:col-start-6 sm:row-start-2\">\n        {typeof children === 'string' ? <p>{children}</p> : children}\n      </blockquote>\n      <div className=\"col-start-1 row-start-2 overflow-hidden rounded-xl bg-neutral-100 sm:col-span-5 sm:row-span-full sm:rounded-3xl\">\n        <Image\n          alt=\"\"\n          {...image}\n          sizes=\"(min-width: 1024px) 17.625rem, (min-width: 768px) 16rem, (min-width: 640px) 40vw, 3rem\"\n          className=\"h-12 w-12 object-cover grayscale sm:aspect-[7/9] sm:h-auto sm:w-full\"\n        />\n      </div>\n      <figcaption className=\"text-sm text-neutral-950 sm:col-span-7 sm:row-start-3 sm:text-base\">\n        <span className=\"font-semibold\">{author.name}</span>\n        <span className=\"hidden font-semibold sm:inline\">, </span>\n        <br className=\"sm:hidden\" />\n        <span className=\"sm:font-semibold\">{author.role}</span>\n      </figcaption>\n    </figure>\n  )\n}\n\nfunction BlockquoteWithoutImage({\n  author,\n  children,\n  className,\n}: {\n  author: { name: string; role: string }\n  children: React.ReactNode\n  className?: string\n}) {\n  return (\n    <Border position=\"left\" className={clsx('pl-8', className)}>\n      <figure className=\"text-sm\">\n        <blockquote className=\"text-neutral-600 [&>*]:relative [&>:first-child]:before:absolute [&>:first-child]:before:right-full [&>:first-child]:before:content-['\u201c'] [&>:last-child]:after:content-['\u201d']\">\n          {typeof children === 'string' ? <p>{children}</p> : children}\n        </blockquote>\n        <figcaption className=\"mt-6 font-semibold text-neutral-950\">\n          {author.name}, {author.role}\n        </figcaption>\n      </figure>\n    </Border>\n  )\n}\n\nexport function Blockquote(\n  props:\n    | React.ComponentPropsWithoutRef<typeof BlockquoteWithImage>\n    | (React.ComponentPropsWithoutRef<typeof BlockquoteWithoutImage> & {\n        image?: undefined\n      }),\n) {\n  if (props.image) {\n    return <BlockquoteWithImage {...props} />\n  }\n\n  return <BlockquoteWithoutImage {...props} />\n}\n"
    },
    {
        "filePath": "src/components/List.tsx",
        "data": "import clsx from 'clsx'\n\nimport { Border } from '@/components/Border'\nimport { FadeIn, FadeInStagger } from '@/components/FadeIn'\n\nexport function List({\n  children,\n  className,\n}: {\n  children: React.ReactNode\n  className?: string\n}) {\n  return (\n    <FadeInStagger>\n      <ul role=\"list\" className={clsx('text-base text-neutral-600', className)}>\n        {children}\n      </ul>\n    </FadeInStagger>\n  )\n}\n\nexport function ListItem({\n  children,\n  title,\n}: {\n  children: React.ReactNode\n  title?: string\n}) {\n  return (\n    <li className=\"group mt-10 first:mt-0\">\n      <FadeIn>\n        <Border className=\"pt-10 group-first:pt-0 group-first:before:hidden group-first:after:hidden\">\n          {title && (\n            <strong className=\"font-semibold text-neutral-950\">{`${title}. `}</strong>\n          )}\n          {children}\n        </Border>\n      </FadeIn>\n    </li>\n  )\n}\n"
    },
    {
        "filePath": "src/components/StylizedImage.tsx",
        "data": "import { useId } from 'react'\nimport Image, { type ImageProps } from 'next/image'\nimport clsx from 'clsx'\n\nconst shapes = [\n  {\n    width: 655,\n    height: 680,\n    path: 'M537.827 9.245A11.5 11.5 0 0 1 549.104 0h63.366c7.257 0 12.7 6.64 11.277 13.755l-25.6 128A11.5 11.5 0 0 1 586.87 151h-28.275a15.999 15.999 0 0 0-15.689 12.862l-59.4 297c-1.98 9.901 5.592 19.138 15.689 19.138h17.275l.127.001c.85.009 1.701.074 2.549.009 11.329-.874 21.411-7.529 24.88-25.981.002-.012.016-.016.023-.007.008.009.022.005.024-.006l24.754-123.771A11.5 11.5 0 0 1 580.104 321h63.366c7.257 0 12.7 6.639 11.277 13.755l-25.6 128A11.5 11.5 0 0 1 617.87 472H559c-22.866 0-28.984 7.98-31.989 25.931-.004.026-.037.035-.052.014-.015-.02-.048-.013-.053.012l-24.759 123.798A11.5 11.5 0 0 1 490.87 631h-29.132a14.953 14.953 0 0 0-14.664 12.021c-4.3 21.502-23.18 36.979-45.107 36.979H83.502c-29.028 0-50.8-26.557-45.107-55.021l102.4-512C145.096 91.477 163.975 76 185.902 76h318.465c10.136 0 21.179-5.35 23.167-15.288l10.293-51.467Zm-512 160A11.5 11.5 0 0 1 37.104 160h63.366c7.257 0 12.7 6.639 11.277 13.755l-25.6 128A11.5 11.5 0 0 1 74.87 311H11.504c-7.257 0-12.7-6.639-11.277-13.755l25.6-128Z',\n  },\n  {\n    width: 719,\n    height: 680,\n    path: 'M89.827 9.245A11.5 11.5 0 0 1 101.104 0h63.366c7.257 0 12.7 6.64 11.277 13.755l-25.6 128A11.5 11.5 0 0 1 138.87 151H75.504c-7.257 0-12.7-6.639-11.277-13.755l25.6-128Zm-64 321A11.5 11.5 0 0 1 37.104 321h63.366c7.257 0 12.7 6.639 11.277 13.755l-25.6 128A11.5 11.5 0 0 1 74.87 472H11.504c-7.257 0-12.7-6.639-11.277-13.755l25.6-128ZM526.795 470a15.999 15.999 0 0 0-15.689 12.862l-32.032 160.159c-4.3 21.502-23.18 36.979-45.107 36.979H115.502c-29.028 0-50.8-26.557-45.107-55.021l102.4-512C177.096 91.477 195.975 76 217.902 76h318.465c29.028 0 50.8 26.557 45.107 55.021l-33.768 168.841c-1.98 9.901 5.592 19.138 15.689 19.138h17.075l.127.001c.85.009 1.701.074 2.549.009 11.329-.874 21.411-7.529 24.88-25.981.002-.012.016-.016.023-.007.008.009.022.005.024-.006l24.754-123.771A11.5 11.5 0 0 1 644.104 160h63.366c7.257 0 12.7 6.639 11.277 13.755l-25.6 128A11.5 11.5 0 0 1 681.87 311H623c-22.866 0-28.984 7.98-31.989 25.931-.004.026-.037.035-.052.014-.015-.02-.048-.013-.053.012l-24.759 123.798A11.5 11.5 0 0 1 554.87 470h-28.075Z',\n  },\n  {\n    width: 719,\n    height: 680,\n    path: 'M632.827 9.245A11.5 11.5 0 0 1 644.104 0h63.366c7.257 0 12.7 6.64 11.277 13.755l-25.6 128A11.5 11.5 0 0 1 681.87 151h-28.275a15.999 15.999 0 0 0-15.689 12.862l-95.832 479.159c-4.3 21.502-23.18 36.979-45.107 36.979H178.502c-29.028 0-50.8-26.557-45.107-55.021l102.4-512C240.096 91.477 258.975 76 280.902 76h318.465c10.136 0 21.179-5.35 23.167-15.288l10.293-51.467Zm0 479A11.5 11.5 0 0 1 644.104 479h63.366c7.257 0 12.7 6.639 11.277 13.755l-25.6 128A11.5 11.5 0 0 1 681.87 630h-63.366c-7.257 0-12.7-6.639-11.277-13.755l25.6-128ZM37.104 159a11.5 11.5 0 0 0-11.277 9.245l-25.6 128C-1.196 303.361 4.247 310 11.504 310H74.87a11.5 11.5 0 0 0 11.277-9.245l24.76-123.798a.03.03 0 0 1 .052-.012c.015.021.048.012.052-.014C114.016 158.98 120.134 151 143 151h58.87a11.5 11.5 0 0 0 11.277-9.245l25.6-128C240.17 6.64 234.727 0 227.47 0h-63.366a11.5 11.5 0 0 0-11.277 9.245l-24.754 123.771c-.002.011-.016.015-.024.006-.007-.009-.021-.005-.023.007-3.469 18.452-13.551 25.107-24.88 25.981-.848.065-1.699 0-2.549-.009l-.127-.001H37.104Z',\n  },\n]\n\ntype ImagePropsWithOptionalAlt = Omit<ImageProps, 'alt'> & { alt?: string }\n\nexport function StylizedImage({\n  shape = 0,\n  className,\n  ...props\n}: ImagePropsWithOptionalAlt & { shape?: 0 | 1 | 2 }) {\n  let id = useId()\n  let { width, height, path } = shapes[shape]\n\n  return (\n    <div\n      className={clsx(\n        className,\n        'relative flex aspect-[719/680] w-full grayscale',\n      )}\n    >\n      <svg viewBox={`0 0 ${width} ${height}`} fill=\"none\" className=\"h-full\">\n        <g clipPath={`url(#${id}-clip)`} className=\"group\">\n          <g className=\"origin-center scale-100 transition duration-500 motion-safe:group-hover:scale-105\">\n            <foreignObject width={width} height={height}>\n              <Image\n                alt=\"\"\n                className=\"w-full bg-neutral-100 object-cover\"\n                style={{ aspectRatio: `${width} / ${height}` }}\n                {...props}\n              />\n            </foreignObject>\n          </g>\n          <use\n            href={`#${id}-shape`}\n            strokeWidth=\"2\"\n            className=\"stroke-neutral-950/10\"\n          />\n        </g>\n        <defs>\n          <clipPath id={`${id}-clip`}>\n            <path\n              id={`${id}-shape`}\n              d={path}\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n            />\n          </clipPath>\n        </defs>\n      </svg>\n    </div>\n  )\n}\n"
    },
    {
        "filePath": "src/components/GridPattern.tsx",
        "data": "'use client'\n\nimport { useEffect, useId, useRef, useState } from 'react'\nimport { motion } from 'framer-motion'\n\nfunction Block({\n  x,\n  y,\n  ...props\n}: Omit<React.ComponentPropsWithoutRef<typeof motion.path>, 'x' | 'y'> & {\n  x: number\n  y: number\n}) {\n  return (\n    <motion.path\n      transform={`translate(${-32 * y + 96 * x} ${160 * y})`}\n      d=\"M45.119 4.5a11.5 11.5 0 0 0-11.277 9.245l-25.6 128C6.82 148.861 12.262 155.5 19.52 155.5h63.366a11.5 11.5 0 0 0 11.277-9.245l25.6-128c1.423-7.116-4.02-13.755-11.277-13.755H45.119Z\"\n      {...props}\n    />\n  )\n}\n\nexport function GridPattern({\n  yOffset = 0,\n  interactive = false,\n  ...props\n}: React.ComponentPropsWithoutRef<'svg'> & {\n  yOffset?: number\n  interactive?: boolean\n}) {\n  let id = useId()\n  let ref = useRef<React.ElementRef<'svg'>>(null)\n  let currentBlock = useRef<[x: number, y: number]>()\n  let counter = useRef(0)\n  let [hoveredBlocks, setHoveredBlocks] = useState<\n    Array<[x: number, y: number, key: number]>\n  >([])\n  let staticBlocks = [\n    [1, 1],\n    [2, 2],\n    [4, 3],\n    [6, 2],\n    [7, 4],\n    [5, 5],\n  ]\n\n  useEffect(() => {\n    if (!interactive) {\n      return\n    }\n\n    function onMouseMove(event: MouseEvent) {\n      if (!ref.current) {\n        return\n      }\n\n      let rect = ref.current.getBoundingClientRect()\n      let x = event.clientX - rect.left\n      let y = event.clientY - rect.top\n      if (x < 0 || y < 0 || x > rect.width || y > rect.height) {\n        return\n      }\n\n      x = x - rect.width / 2 - 32\n      y = y - yOffset\n      x += Math.tan(32 / 160) * y\n      x = Math.floor(x / 96)\n      y = Math.floor(y / 160)\n\n      if (currentBlock.current?.[0] === x && currentBlock.current?.[1] === y) {\n        return\n      }\n\n      currentBlock.current = [x, y]\n\n      setHoveredBlocks((blocks) => {\n        let key = counter.current++\n        let block = [x, y, key] as (typeof hoveredBlocks)[number]\n        return [...blocks, block].filter(\n          (block) => !(block[0] === x && block[1] === y && block[2] !== key),\n        )\n      })\n    }\n\n    window.addEventListener('mousemove', onMouseMove)\n\n    return () => {\n      window.removeEventListener('mousemove', onMouseMove)\n    }\n  }, [yOffset, interactive])\n\n  return (\n    <svg ref={ref} aria-hidden=\"true\" {...props}>\n      <rect width=\"100%\" height=\"100%\" fill={`url(#${id})`} strokeWidth=\"0\" />\n      <svg x=\"50%\" y={yOffset} strokeWidth=\"0\" className=\"overflow-visible\">\n        {staticBlocks.map((block) => (\n          <Block key={`${block}`} x={block[0]} y={block[1]} />\n        ))}\n        {hoveredBlocks.map((block) => (\n          <Block\n            key={block[2]}\n            x={block[0]}\n            y={block[1]}\n            animate={{ opacity: [0, 1, 0] }}\n            transition={{ duration: 1, times: [0, 0, 1] }}\n            onAnimationComplete={() => {\n              setHoveredBlocks((blocks) =>\n                blocks.filter((b) => b[2] !== block[2]),\n              )\n            }}\n          />\n        ))}\n      </svg>\n      <defs>\n        <pattern\n          id={id}\n          width=\"96\"\n          height=\"480\"\n          x=\"50%\"\n          patternUnits=\"userSpaceOnUse\"\n          patternTransform={`translate(0 ${yOffset})`}\n          fill=\"none\"\n        >\n          <path d=\"M128 0 98.572 147.138A16 16 0 0 1 82.883 160H13.117a16 16 0 0 0-15.69 12.862l-26.855 134.276A16 16 0 0 1-45.117 320H-116M64-160 34.572-12.862A16 16 0 0 1 18.883 0h-69.766a16 16 0 0 0-15.69 12.862l-26.855 134.276A16 16 0 0 1-109.117 160H-180M192 160l-29.428 147.138A15.999 15.999 0 0 1 146.883 320H77.117a16 16 0 0 0-15.69 12.862L34.573 467.138A16 16 0 0 1 18.883 480H-52M-136 480h58.883a16 16 0 0 0 15.69-12.862l26.855-134.276A16 16 0 0 1-18.883 320h69.766a16 16 0 0 0 15.69-12.862l26.855-134.276A16 16 0 0 1 109.117 160H192M-72 640h58.883a16 16 0 0 0 15.69-12.862l26.855-134.276A16 16 0 0 1 45.117 480h69.766a15.999 15.999 0 0 0 15.689-12.862l26.856-134.276A15.999 15.999 0 0 1 173.117 320H256M-200 320h58.883a15.999 15.999 0 0 0 15.689-12.862l26.856-134.276A16 16 0 0 1-82.883 160h69.766a16 16 0 0 0 15.69-12.862L29.427 12.862A16 16 0 0 1 45.117 0H128\" />\n        </pattern>\n      </defs>\n    </svg>\n  )\n}\n"
    },
    {
        "filePath": "src/components/Container.tsx",
        "data": "import clsx from 'clsx'\n\ntype ContainerProps<T extends React.ElementType> = {\n  as?: T\n  className?: string\n  children: React.ReactNode\n}\n\nexport function Container<T extends React.ElementType = 'div'>({\n  as,\n  className,\n  children,\n}: Omit<React.ComponentPropsWithoutRef<T>, keyof ContainerProps<T>> &\n  ContainerProps<T>) {\n  let Component = as ?? 'div'\n\n  return (\n    <Component className={clsx('mx-auto max-w-7xl px-6 lg:px-8', className)}>\n      <div className=\"mx-auto max-w-2xl lg:max-w-none\">{children}</div>\n    </Component>\n  )\n}\n"
    },
    {
        "filePath": "src/components/GridList.tsx",
        "data": "import clsx from 'clsx'\n\nimport { Border } from '@/components/Border'\nimport { FadeIn, FadeInStagger } from '@/components/FadeIn'\n\nexport function GridList({\n  children,\n  className,\n}: {\n  children: React.ReactNode\n  className?: string\n}) {\n  return (\n    <FadeInStagger>\n      <ul\n        role=\"list\"\n        className={clsx(\n          'grid grid-cols-1 gap-10 sm:grid-cols-2 lg:grid-cols-3',\n          className,\n        )}\n      >\n        {children}\n      </ul>\n    </FadeInStagger>\n  )\n}\n\nexport function GridListItem({\n  title,\n  children,\n  className,\n  invert = false,\n}: {\n  title: string\n  children: React.ReactNode\n  className?: string\n  invert?: boolean\n}) {\n  return (\n    <li\n      className={clsx(\n        'text-base',\n        invert\n          ? 'text-neutral-300 before:bg-white after:bg-white/10'\n          : 'text-neutral-600 before:bg-neutral-950 after:bg-neutral-100',\n        className,\n      )}\n    >\n      <FadeIn>\n        <Border position=\"left\" className=\"pl-8\" invert={invert}>\n          <strong\n            className={clsx(\n              'font-semibold',\n              invert ? 'text-white' : 'text-neutral-950',\n            )}\n          >\n            {title}.\n          </strong>{' '}\n          {children}\n        </Border>\n      </FadeIn>\n    </li>\n  )\n}\n"
    },
    {
        "filePath": "src/components/Button.tsx",
        "data": "import Link from 'next/link'\nimport clsx from 'clsx'\n\ntype ButtonProps = {\n  invert?: boolean\n} & (\n  | React.ComponentPropsWithoutRef<typeof Link>\n  | (React.ComponentPropsWithoutRef<'button'> & { href?: undefined })\n)\n\nexport function Button({\n  invert = false,\n  className,\n  children,\n  ...props\n}: ButtonProps) {\n  className = clsx(\n    className,\n    'inline-flex rounded-full px-4 py-1.5 text-sm font-semibold transition',\n    invert\n      ? 'bg-white text-neutral-950 hover:bg-neutral-200'\n      : 'bg-neutral-950 text-white hover:bg-neutral-800',\n  )\n\n  let inner = <span className=\"relative top-px\">{children}</span>\n\n  if (typeof props.href === 'undefined') {\n    return (\n      <button className={className} {...props}>\n        {inner}\n      </button>\n    )\n  }\n\n  return (\n    <Link className={className} {...props}>\n      {inner}\n    </Link>\n  )\n}\n"
    },
    {
        "filePath": "src/components/RootLayout.tsx",
        "data": "'use client'\n\nimport {\n  createContext,\n  useContext,\n  useEffect,\n  useId,\n  useRef,\n  useState,\n} from 'react'\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\nimport clsx from 'clsx'\nimport { motion, MotionConfig, useReducedMotion } from 'framer-motion'\n\nimport { Button } from '@/components/Button'\nimport { Container } from '@/components/Container'\nimport { Footer } from '@/components/Footer'\nimport { GridPattern } from '@/components/GridPattern'\nimport { Logo, Logomark } from '@/components/Logo'\nimport { Offices } from '@/components/Offices'\nimport { SocialMedia } from '@/components/SocialMedia'\n\nconst RootLayoutContext = createContext<{\n  logoHovered: boolean\n  setLogoHovered: React.Dispatch<React.SetStateAction<boolean>>\n} | null>(null)\n\nfunction XIcon(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\" {...props}>\n      <path d=\"m5.636 4.223 14.142 14.142-1.414 1.414L4.222 5.637z\" />\n      <path d=\"M4.222 18.363 18.364 4.22l1.414 1.414L5.636 19.777z\" />\n    </svg>\n  )\n}\n\nfunction MenuIcon(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\" {...props}>\n      <path d=\"M2 6h20v2H2zM2 16h20v2H2z\" />\n    </svg>\n  )\n}\n\nfunction Header({\n  panelId,\n  icon: Icon,\n  expanded,\n  onToggle,\n  toggleRef,\n  invert = false,\n}: {\n  panelId: string\n  icon: React.ComponentType<{ className?: string }>\n  expanded: boolean\n  onToggle: () => void\n  toggleRef: React.RefObject<HTMLButtonElement>\n  invert?: boolean\n}) {\n  let { logoHovered, setLogoHovered } = useContext(RootLayoutContext)!\n\n  return (\n    <Container>\n      <div className=\"flex items-center justify-between\">\n        <Link\n          href=\"/\"\n          aria-label=\"Home\"\n          onMouseEnter={() => setLogoHovered(true)}\n          onMouseLeave={() => setLogoHovered(false)}\n        >\n          <Logomark\n            className=\"h-8 sm:hidden\"\n            invert={invert}\n            filled={logoHovered}\n          />\n          <Logo\n            className=\"hidden h-8 sm:block\"\n            invert={invert}\n            filled={logoHovered}\n          />\n        </Link>\n        <div className=\"flex items-center gap-x-8\">\n          <Button href=\"/contact\" invert={invert}>\n            Contact us\n          </Button>\n          <button\n            ref={toggleRef}\n            type=\"button\"\n            onClick={onToggle}\n            aria-expanded={expanded ? 'true' : 'false'}\n            aria-controls={panelId}\n            className={clsx(\n              'group -m-2.5 rounded-full p-2.5 transition',\n              invert ? 'hover:bg-white/10' : 'hover:bg-neutral-950/10',\n            )}\n            aria-label=\"Toggle navigation\"\n          >\n            <Icon\n              className={clsx(\n                'h-6 w-6',\n                invert\n                  ? 'fill-white group-hover:fill-neutral-200'\n                  : 'fill-neutral-950 group-hover:fill-neutral-700',\n              )}\n            />\n          </button>\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nfunction NavigationRow({ children }: { children: React.ReactNode }) {\n  return (\n    <div className=\"even:mt-px sm:bg-neutral-950\">\n      <Container>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2\">{children}</div>\n      </Container>\n    </div>\n  )\n}\n\nfunction NavigationItem({\n  href,\n  children,\n}: {\n  href: string\n  children: React.ReactNode\n}) {\n  return (\n    <Link\n      href={href}\n      className=\"group relative isolate -mx-6 bg-neutral-950 px-6 py-10 even:mt-px sm:mx-0 sm:px-0 sm:py-16 sm:odd:pr-16 sm:even:mt-0 sm:even:border-l sm:even:border-neutral-800 sm:even:pl-16\"\n    >\n      {children}\n      <span className=\"absolute inset-y-0 -z-10 w-screen bg-neutral-900 opacity-0 transition group-odd:right-0 group-even:left-0 group-hover:opacity-100\" />\n    </Link>\n  )\n}\n\nfunction Navigation() {\n  return (\n    <nav className=\"mt-px font-display text-5xl font-medium tracking-tight text-white\">\n      <NavigationRow>\n        <NavigationItem href=\"/work\">Our Work</NavigationItem>\n        <NavigationItem href=\"/about\">About Us</NavigationItem>\n      </NavigationRow>\n      <NavigationRow>\n        <NavigationItem href=\"/process\">Our Process</NavigationItem>\n        <NavigationItem href=\"/blog\">Blog</NavigationItem>\n      </NavigationRow>\n    </nav>\n  )\n}\n\nfunction RootLayoutInner({ children }: { children: React.ReactNode }) {\n  let panelId = useId()\n  let [expanded, setExpanded] = useState(false)\n  let openRef = useRef<React.ElementRef<'button'>>(null)\n  let closeRef = useRef<React.ElementRef<'button'>>(null)\n  let navRef = useRef<React.ElementRef<'div'>>(null)\n  let shouldReduceMotion = useReducedMotion()\n\n  useEffect(() => {\n    function onClick(event: MouseEvent) {\n      if (\n        event.target instanceof HTMLElement &&\n        event.target.closest('a')?.href === window.location.href\n      ) {\n        setExpanded(false)\n      }\n    }\n\n    window.addEventListener('click', onClick)\n\n    return () => {\n      window.removeEventListener('click', onClick)\n    }\n  }, [])\n\n  return (\n    <MotionConfig transition={shouldReduceMotion ? { duration: 0 } : undefined}>\n      <header>\n        <div\n          className=\"absolute left-0 right-0 top-2 z-40 pt-14\"\n          aria-hidden={expanded ? 'true' : undefined}\n          // @ts-ignore (https://github.com/facebook/react/issues/17157)\n          inert={expanded ? '' : undefined}\n        >\n          <Header\n            panelId={panelId}\n            icon={MenuIcon}\n            toggleRef={openRef}\n            expanded={expanded}\n            onToggle={() => {\n              setExpanded((expanded) => !expanded)\n              window.setTimeout(\n                () => closeRef.current?.focus({ preventScroll: true }),\n              )\n            }}\n          />\n        </div>\n\n        <motion.div\n          layout\n          id={panelId}\n          style={{ height: expanded ? 'auto' : '0.5rem' }}\n          className=\"relative z-50 overflow-hidden bg-neutral-950 pt-2\"\n          aria-hidden={expanded ? undefined : 'true'}\n          // @ts-ignore (https://github.com/facebook/react/issues/17157)\n          inert={expanded ? undefined : ''}\n        >\n          <motion.div layout className=\"bg-neutral-800\">\n            <div ref={navRef} className=\"bg-neutral-950 pb-16 pt-14\">\n              <Header\n                invert\n                panelId={panelId}\n                icon={XIcon}\n                toggleRef={closeRef}\n                expanded={expanded}\n                onToggle={() => {\n                  setExpanded((expanded) => !expanded)\n                  window.setTimeout(\n                    () => openRef.current?.focus({ preventScroll: true }),\n                  )\n                }}\n              />\n            </div>\n            <Navigation />\n            <div className=\"relative bg-neutral-950 before:absolute before:inset-x-0 before:top-0 before:h-px before:bg-neutral-800\">\n              <Container>\n                <div className=\"grid grid-cols-1 gap-y-10 pb-16 pt-10 sm:grid-cols-2 sm:pt-16\">\n                  <div>\n                    <h2 className=\"font-display text-base font-semibold text-white\">\n                      Our offices\n                    </h2>\n                    <Offices\n                      invert\n                      className=\"mt-6 grid grid-cols-1 gap-8 sm:grid-cols-2\"\n                    />\n                  </div>\n                  <div className=\"sm:border-l sm:border-transparent sm:pl-16\">\n                    <h2 className=\"font-display text-base font-semibold text-white\">\n                      Follow us\n                    </h2>\n                    <SocialMedia className=\"mt-6\" invert />\n                  </div>\n                </div>\n              </Container>\n            </div>\n          </motion.div>\n        </motion.div>\n      </header>\n\n      <motion.div\n        layout\n        style={{ borderTopLeftRadius: 40, borderTopRightRadius: 40 }}\n        className=\"relative flex flex-auto overflow-hidden bg-white pt-14\"\n      >\n        <motion.div\n          layout\n          className=\"relative isolate flex w-full flex-col pt-9\"\n        >\n          <GridPattern\n            className=\"absolute inset-x-0 -top-14 -z-10 h-[1000px] w-full fill-neutral-50 stroke-neutral-950/5 [mask-image:linear-gradient(to_bottom_left,white_40%,transparent_50%)]\"\n            yOffset={-96}\n            interactive\n          />\n\n          <main className=\"w-full flex-auto\">{children}</main>\n\n          <Footer />\n        </motion.div>\n      </motion.div>\n    </MotionConfig>\n  )\n}\n\nexport function RootLayout({ children }: { children: React.ReactNode }) {\n  let pathname = usePathname()\n  let [logoHovered, setLogoHovered] = useState(false)\n\n  return (\n    <RootLayoutContext.Provider value={{ logoHovered, setLogoHovered }}>\n      <RootLayoutInner key={pathname}>{children}</RootLayoutInner>\n    </RootLayoutContext.Provider>\n  )\n}\n"
    },
    {
        "filePath": "src/components/StatList.tsx",
        "data": "import { Border } from '@/components/Border'\nimport { FadeIn, FadeInStagger } from '@/components/FadeIn'\n\nexport function StatList({\n  children,\n  ...props\n}: Omit<React.ComponentPropsWithoutRef<typeof FadeInStagger>, 'children'> & {\n  children: React.ReactNode\n}) {\n  return (\n    <FadeInStagger {...props}>\n      <dl className=\"grid grid-cols-1 gap-10 sm:grid-cols-2 lg:auto-cols-fr lg:grid-flow-col lg:grid-cols-none\">\n        {children}\n      </dl>\n    </FadeInStagger>\n  )\n}\n\nexport function StatListItem({\n  label,\n  value,\n}: {\n  label: string\n  value: string\n}) {\n  return (\n    <Border as={FadeIn} position=\"left\" className=\"flex flex-col-reverse pl-8\">\n      <dt className=\"mt-2 text-base text-neutral-600\">{label}</dt>\n      <dd className=\"font-display text-3xl font-semibold text-neutral-950 sm:text-4xl\">\n        {value}\n      </dd>\n    </Border>\n  )\n}\n"
    },
    {
        "filePath": "src/components/SectionIntro.tsx",
        "data": "import clsx from 'clsx'\n\nimport { Container } from '@/components/Container'\nimport { FadeIn } from '@/components/FadeIn'\n\nexport function SectionIntro({\n  title,\n  eyebrow,\n  children,\n  smaller = false,\n  invert = false,\n  ...props\n}: Omit<\n  React.ComponentPropsWithoutRef<typeof Container>,\n  'title' | 'children'\n> & {\n  title: string\n  eyebrow?: string\n  children?: React.ReactNode\n  smaller?: boolean\n  invert?: boolean\n}) {\n  return (\n    <Container {...props}>\n      <FadeIn className=\"max-w-2xl\">\n        <h2>\n          {eyebrow && (\n            <>\n              <span\n                className={clsx(\n                  'mb-6 block font-display text-base font-semibold',\n                  invert ? 'text-white' : 'text-neutral-950',\n                )}\n              >\n                {eyebrow}\n              </span>\n              <span className=\"sr-only\"> - </span>\n            </>\n          )}\n          <span\n            className={clsx(\n              'block font-display tracking-tight [text-wrap:balance]',\n              smaller\n                ? 'text-2xl font-semibold'\n                : 'text-4xl font-medium sm:text-5xl',\n              invert ? 'text-white' : 'text-neutral-950',\n            )}\n          >\n            {title}\n          </span>\n        </h2>\n        {children && (\n          <div\n            className={clsx(\n              'mt-6 text-xl',\n              invert ? 'text-neutral-300' : 'text-neutral-600',\n            )}\n          >\n            {children}\n          </div>\n        )}\n      </FadeIn>\n    </Container>\n  )\n}\n"
    },
    {
        "filePath": "src/components/Border.tsx",
        "data": "import clsx from 'clsx'\n\ntype BorderProps<T extends React.ElementType> = {\n  as?: T\n  className?: string\n  position?: 'top' | 'left'\n  invert?: boolean\n}\n\nexport function Border<T extends React.ElementType = 'div'>({\n  as,\n  className,\n  position = 'top',\n  invert = false,\n  ...props\n}: Omit<React.ComponentPropsWithoutRef<T>, keyof BorderProps<T>> &\n  BorderProps<T>) {\n  let Component = as ?? 'div'\n\n  return (\n    <Component\n      className={clsx(\n        className,\n        'relative before:absolute after:absolute',\n        invert\n          ? 'before:bg-white after:bg-white/10'\n          : 'before:bg-neutral-950 after:bg-neutral-950/10',\n        position === 'top' &&\n          'before:left-0 before:top-0 before:h-px before:w-6 after:left-8 after:right-0 after:top-0 after:h-px',\n        position === 'left' &&\n          'before:left-0 before:top-0 before:h-6 before:w-px after:bottom-0 after:left-0 after:top-8 after:w-px',\n      )}\n      {...props}\n    />\n  )\n}\n"
    },
    {
        "filePath": "src/components/Logo.tsx",
        "data": "import { useId } from 'react'\nimport clsx from 'clsx'\n\nexport function Logomark({\n  invert = false,\n  filled = false,\n  ...props\n}: React.ComponentPropsWithoutRef<'svg'> & {\n  invert?: boolean\n  filled?: boolean\n}) {\n  let id = useId()\n\n  return (\n    <svg viewBox=\"0 0 32 32\" aria-hidden=\"true\" {...props}>\n      <rect\n        clipPath={`url(#${id}-clip)`}\n        className={clsx(\n          'h-8 transition-all duration-300',\n          invert ? 'fill-white' : 'fill-neutral-950',\n          filled ? 'w-8' : 'w-0 group-hover/logo:w-8',\n        )}\n      />\n      <use\n        href={`#${id}-path`}\n        className={invert ? 'stroke-white' : 'stroke-neutral-950'}\n        fill=\"none\"\n        strokeWidth=\"1.5\"\n      />\n      <defs>\n        <path\n          id={`${id}-path`}\n          d=\"M3.25 26v.75H7c1.305 0 2.384-.21 3.346-.627.96-.415 1.763-1.02 2.536-1.752.695-.657 1.39-1.443 2.152-2.306l.233-.263c.864-.975 1.843-2.068 3.071-3.266 1.209-1.18 2.881-1.786 4.621-1.786h5.791V5.25H25c-1.305 0-2.384.21-3.346.627-.96.415-1.763 1.02-2.536 1.751-.695.658-1.39 1.444-2.152 2.307l-.233.263c-.864.975-1.843 2.068-3.071 3.266-1.209 1.18-2.881 1.786-4.621 1.786H3.25V26Z\"\n        />\n        <clipPath id={`${id}-clip`}>\n          <use href={`#${id}-path`} />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\n\nexport function Logo({\n  className,\n  invert = false,\n  filled = false,\n  fillOnHover = false,\n  ...props\n}: React.ComponentPropsWithoutRef<'svg'> & {\n  invert?: boolean\n  filled?: boolean\n  fillOnHover?: boolean\n}) {\n\n  return (\n    <div className=\"flex items-center\"> {/* Flex container with Tailwind classes */}\n      <div>\n        <svg\n          viewBox=\"0 0 50 50\"\n    \n          aria-hidden=\"true\"\n          className={clsx('group logo ', fillOnHover && 'group-logo', className)}\n          {...props}\n        >\n          <Logomark\n            preserveAspectRatio=\"xMinYMid meet\"\n            invert={invert}\n            filled={filled}\n          />\n        </svg>\n      </div>\n  \n      <div>\n        <img src=\"/upscaler_logo.png\" alt=\"Logo\" className=\"h-16\" /> \n      </div>\n    </div>\n  );\n  \n}\n"
    },
    {
        "filePath": "src/components/PageIntro.tsx",
        "data": "import clsx from 'clsx'\n\nimport { Container } from '@/components/Container'\nimport { FadeIn } from '@/components/FadeIn'\n\nexport function PageIntro({\n  eyebrow,\n  title,\n  children,\n  centered = false,\n}: {\n  eyebrow: string\n  title: string\n  children: React.ReactNode\n  centered?: boolean\n}) {\n  return (\n    <Container\n      className={clsx('mt-24 sm:mt-32 lg:mt-40', centered && 'text-center')}\n    >\n      <FadeIn>\n        <h1>\n          <span className=\"block font-display text-base font-semibold text-neutral-950\">\n            {eyebrow}\n          </span>\n          <span className=\"sr-only\"> - </span>\n          <span\n            className={clsx(\n              'mt-6 block max-w-5xl font-display text-5xl font-medium tracking-tight text-neutral-950 [text-wrap:balance] sm:text-6xl',\n              centered && 'mx-auto',\n            )}\n          >\n            {title}\n          </span>\n        </h1>\n        <div\n          className={clsx(\n            'mt-6 max-w-3xl text-xl text-neutral-600',\n            centered && 'mx-auto',\n          )}\n        >\n          {children}\n        </div>\n      </FadeIn>\n    </Container>\n  )\n}\n"
    },
    {
        "filePath": "src/components/MDXComponents.tsx",
        "data": "import clsx from 'clsx'\n\nimport { Blockquote } from '@/components/Blockquote'\nimport { Border } from '@/components/Border'\nimport { GrayscaleTransitionImage } from '@/components/GrayscaleTransitionImage'\nimport { StatList, StatListItem } from '@/components/StatList'\nimport { TagList, TagListItem } from '@/components/TagList'\n\nexport const MDXComponents = {\n  Blockquote({\n    className,\n    ...props\n  }: React.ComponentPropsWithoutRef<typeof Blockquote>) {\n    return <Blockquote className={clsx('my-32', className)} {...props} />\n  },\n  img: function Img({\n    className,\n    ...props\n  }: React.ComponentPropsWithoutRef<typeof GrayscaleTransitionImage>) {\n    return (\n      <div\n        className={clsx(\n          'group isolate my-10 overflow-hidden rounded-4xl bg-neutral-100 max-sm:-mx-6',\n          className,\n        )}\n      >\n        <GrayscaleTransitionImage\n          {...props}\n          sizes=\"(min-width: 768px) 42rem, 100vw\"\n          className=\"aspect-[16/10] w-full object-cover\"\n        />\n      </div>\n    )\n  },\n  StatList({\n    className,\n    ...props\n  }: React.ComponentPropsWithoutRef<typeof StatList>) {\n    return (\n      <StatList className={clsx('my-32 !max-w-none', className)} {...props} />\n    )\n  },\n  StatListItem,\n  table: function Table({\n    className,\n    ...props\n  }: React.ComponentPropsWithoutRef<'table'>) {\n    return (\n      <div\n        className={clsx(\n          'my-10 max-sm:-mx-6 max-sm:flex max-sm:overflow-x-auto',\n          className,\n        )}\n      >\n        <div className=\"max-sm:min-w-full max-sm:flex-none max-sm:px-6\">\n          <table {...props} />\n        </div>\n      </div>\n    )\n  },\n  TagList({\n    className,\n    ...props\n  }: React.ComponentPropsWithoutRef<typeof TagList>) {\n    return <TagList className={clsx('my-6', className)} {...props} />\n  },\n  TagListItem,\n  TopTip({\n    children,\n    className,\n  }: {\n    children: React.ReactNode\n    className?: string\n  }) {\n    return (\n      <Border position=\"left\" className={clsx('my-10 pl-8', className)}>\n        <p className=\"font-display text-sm font-bold uppercase tracking-widest text-neutral-950\">\n          Top tip\n        </p>\n        <div className=\"mt-4\">{children}</div>\n      </Border>\n    )\n  },\n  Typography({ className, ...props }: React.ComponentPropsWithoutRef<'div'>) {\n    return <div className={clsx('typography', className)} {...props} />\n  },\n  wrapper({ className, ...props }: React.ComponentPropsWithoutRef<'div'>) {\n    return (\n      <div\n        className={clsx(\n          '[&>*]:mx-auto [&>*]:max-w-3xl [&>:first-child]:!mt-0 [&>:last-child]:!mb-0',\n          className,\n        )}\n        {...props}\n      />\n    )\n  },\n}\n"
    },
    {
        "filePath": "src/components/Footer.tsx",
        "data": "import Link from 'next/link'\n\nimport { Container } from '@/components/Container'\nimport { FadeIn } from '@/components/FadeIn'\nimport { Logo } from '@/components/Logo'\n\n\nconst navigation = [\n  {\n    name: 'Facebook',\n    href: '#',\n    // @ts-ignore\n    icon: (props) => (\n      <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: 'Instagram',\n    href: '#',\n    // @ts-ignore\n    icon: (props) => (\n      <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          d=\"M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: 'X',\n    href: '#',\n    // @ts-ignore\n    icon: (props) => (\n      <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n        <path d=\"M13.6823 10.6218L20.2391 3H18.6854L12.9921 9.61788L8.44486 3H3.2002L10.0765 13.0074L3.2002 21H4.75404L10.7663 14.0113L15.5685 21H20.8131L13.6819 10.6218H13.6823ZM11.5541 13.0956L10.8574 12.0991L5.31391 4.16971H7.70053L12.1742 10.5689L12.8709 11.5655L18.6861 19.8835H16.2995L11.5541 13.096V13.0956Z\" />\n      </svg>\n    ),\n  },\n  {\n    name: 'GitHub',\n    href: '#',\n    // @ts-ignore\n    icon: (props) => (\n      <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          d=\"M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: 'YouTube',\n    href: '#',\n    // @ts-ignore\n    icon: (props) => (\n      <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          d=\"M19.812 5.418c.861.23 1.538.907 1.768 1.768C21.998 8.746 22 12 22 12s0 3.255-.418 4.814a2.504 2.504 0 0 1-1.768 1.768c-1.56.419-7.814.419-7.814.419s-6.255 0-7.814-.419a2.505 2.505 0 0 1-1.768-1.768C2 15.255 2 12 2 12s0-3.255.417-4.814a2.507 2.507 0 0 1 1.768-1.768C5.744 5 11.998 5 11.998 5s6.255 0 7.814.418ZM15.194 12 10 15V9l5.194 3Z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    ),\n  },\n]\n\n\n\nfunction Navigation() {\n  return (\n    <footer className=\"bg-white\">\n      <div className=\"mx-auto max-w-7xl px-6 py-12 md:flex md:items-center md:justify-between lg:px-8\">\n        <div className=\"flex justify-center space-x-6 md:order-2\">\n          {navigation.map((item) => (\n            <a key={item.name} href={item.href} className=\"text-gray-400 hover:text-gray-500\">\n              <span className=\"sr-only\">{item.name}</span>\n              <item.icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </a>\n          ))}\n        </div>\n   \n      </div>\n    </footer>\n  )\n}\n\n\n\n\nexport function Footer() {\n  return (\n    <Container as=\"footer\" className=\"mt-24 w-full sm:mt-32 lg:mt-40\">\n      <FadeIn>\n        <div className=\"grid grid-cols-1 gap-x-8 gap-y-16 lg:grid-cols-2\">\n          <Navigation />\n          <div className=\"flex lg:justify-end\">\n         \n          </div>\n        </div>\n        <div className=\"mb-20 mt-24 flex flex-wrap items-end justify-between gap-x-6 gap-y-4 border-t border-neutral-950/10 pt-12\">\n          <Link href=\"/\" aria-label=\"Home\">\n            <Logo className=\"h-8\" fillOnHover />\n          </Link>\n          <p className=\"text-sm text-neutral-700\">\n            \u00a9 All Copyrights Reserved. Upscaler Labs Ltd. 2022 - {new Date().getFullYear()}\n          </p>\n        </div>\n      </FadeIn>\n    </Container>\n  )\n}\n"
    },
    {
        "filePath": "src/components/GrayscaleTransitionImage.tsx",
        "data": "'use client'\n\nimport { useRef } from 'react'\nimport Image, { type ImageProps } from 'next/image'\nimport {\n  motion,\n  useMotionTemplate,\n  useScroll,\n  useTransform,\n} from 'framer-motion'\n\nconst MotionImage = motion(Image)\n\nexport function GrayscaleTransitionImage(\n  props: Pick<\n    ImageProps,\n    'src' | 'quality' | 'className' | 'sizes' | 'priority'\n  > & { alt?: string },\n) {\n  let ref = useRef<React.ElementRef<'div'>>(null)\n  let { scrollYProgress } = useScroll({\n    target: ref,\n    offset: ['start 65%', 'end 35%'],\n  })\n  let grayscale = useTransform(scrollYProgress, [0, 0.5, 1], [1, 0, 1])\n  let filter = useMotionTemplate`grayscale(${grayscale})`\n\n  return (\n    <div ref={ref} className=\"group relative\">\n      <MotionImage alt=\"\" style={{ filter } as any} {...props} />\n      <div\n        className=\"pointer-events-none absolute left-0 top-0 w-full opacity-0 transition duration-300 group-hover:opacity-100\"\n        aria-hidden=\"true\"\n      >\n        <Image alt=\"\" {...props} />\n      </div>\n    </div>\n  )\n}\n"
    },
    {
        "filePath": "src/components/SocialMedia.tsx",
        "data": "import Link from 'next/link'\nimport clsx from 'clsx'\n\nfunction FacebookIcon(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12Z\"\n      />\n    </svg>\n  )\n}\n\nfunction InstagramIcon(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465.668.25 1.272.644 1.772 1.153.509.5.902 1.104 1.153 1.772.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.903 4.903 0 0 1-1.153 1.772c-.5.509-1.104.902-1.772 1.153-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.903 4.903 0 0 1-1.772-1.153 4.902 4.902 0 0 1-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 0 1 1.153-1.772A4.902 4.902 0 0 1 5.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63Zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.096 3.096 0 0 0-.748-1.15 3.098 3.098 0 0 0-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058ZM12 6.865a5.135 5.135 0 1 1 0 10.27 5.135 5.135 0 0 1 0-10.27Zm0 1.802a3.333 3.333 0 1 0 0 6.666 3.333 3.333 0 0 0 0-6.666Zm5.338-3.205a1.2 1.2 0 1 1 0 2.4 1.2 1.2 0 0 1 0-2.4Z\"\n      />\n    </svg>\n  )\n}\n\nfunction TwitterIcon(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\" {...props}>\n      <path d=\"M8.29 20.253c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0 0 22 5.922a8.19 8.19 0 0 1-2.357.646 4.118 4.118 0 0 0 1.804-2.27 8.224 8.224 0 0 1-2.605.996 4.107 4.107 0 0 0-6.993 3.743A11.65 11.65 0 0 1 3.392 4.75a4.106 4.106 0 0 0 1.27 5.477A4.072 4.072 0 0 1 2.8 9.715v.052a4.105 4.105 0 0 0 3.292 4.022 4.095 4.095 0 0 1-1.853.07 4.108 4.108 0 0 0 3.834 2.85A8.232 8.232 0 0 1 2 18.41a11.616 11.616 0 0 0 6.29 1.84\" />\n    </svg>\n  )\n}\n\nfunction GitHubIcon(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0 1 12 6.844a9.59 9.59 0 0 1 2.504.337c1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.02 10.02 0 0 0 22 12.017C22 6.484 17.522 2 12 2Z\"\n      />\n    </svg>\n  )\n}\n\n\n\nexport const socialMediaProfiles = [\n  { title: 'Discord', href: 'https://discord.com/', icon: FacebookIcon },\n  { title: 'Twitter', href: 'https://twitter.com', icon: TwitterIcon },\n  { title: 'GitHub', href: 'https://github.com', icon: GitHubIcon },\n\n]\n\nexport function SocialMedia({\n  className,\n  invert = false,\n}: {\n  className?: string\n  invert?: boolean\n}) {\n  return (\n    <ul\n      role=\"list\"\n      className={clsx(\n        'flex gap-x-10',\n        invert ? 'text-white' : 'text-neutral-950',\n        className,\n      )}\n    >\n      {socialMediaProfiles.map((socialMediaProfile) => (\n        <li key={socialMediaProfile.title}>\n          <Link\n            href={socialMediaProfile.href}\n            aria-label={socialMediaProfile.title}\n            className={clsx(\n              'transition',\n              invert ? 'hover:text-neutral-200' : 'hover:text-neutral-700',\n            )}\n          >\n            <socialMediaProfile.icon className=\"h-6 w-6 fill-current\" />\n          </Link>\n        </li>\n      ))}\n    </ul>\n  )\n}\n"
    },
    {
        "filePath": "src/components/ContactSection.tsx",
        "data": "import { Button } from '@/components/Button'\nimport { Container } from '@/components/Container'\nimport { FadeIn } from '@/components/FadeIn'\nimport { Offices } from '@/components/Offices'\n\nexport function ContactSection() {\n  return (\n    <Container className=\"mt-24 sm:mt-32 lg:mt-40\">\n      <FadeIn className=\"-mx-6 rounded-4xl bg-neutral-950 px-6 py-20 sm:mx-0 sm:py-32 md:px-12\">\n        <div className=\"mx-auto max-w-4xl\">\n          <div className=\"max-w-xl\">\n            <h2 className=\"font-display text-3xl font-medium text-white [text-wrap:balance] sm:text-4xl\">\n              Ready to upgrade your digital presence?\n            </h2>\n            <div className=\"mt-6 flex\">\n              <Button href=\"/contact\" invert>\n                Contact us\n              </Button>\n            </div>\n            <div className=\"mt-10 border-t border-white/10 pt-10\">\n              <h3 className=\"font-display text-base font-semibold text-white\">\n                Our offices\n              </h3>\n              <Offices\n                invert\n                className=\"mt-6 grid grid-cols-1 gap-8 sm:grid-cols-2\"\n              />\n            </div>\n          </div>\n        </div>\n      </FadeIn>\n    </Container>\n  )\n}\n"
    }
]